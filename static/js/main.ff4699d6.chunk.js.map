{"version":3,"sources":["components/Coin.js","List.js","components/Chart.js","components/Donut.js","Info.js","App.js","serviceWorker.js","index.js"],"names":["Coin","coin","switchURL","window","location","id","price_change_percentage_24h","className","onClick","market_cap_rank","src","image","name","symbol","Math","ceil","current_price","round","Number","EPSILON","List","data","map","key","Chart","props","coinID","useState","dateArr","setdateArr","priceArr","setpriceArr","chartPrices","setchartPrices","getInfo","a","fetch","rawData","json","chartData","console","log","prices","instArr","push","Date","toFixed","useEffect","series","options","chart","type","stacked","height","background","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","dataLabels","markers","size","title","text","align","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","theme","mode","palette","monochrome","color","shadeTo","yaxis","labels","formatter","val","tickAmount","xaxis","tooltip","shared","y","Donut","circ","cir_sup","rem","ttl","ttl_sup","numFormat","labelValue","abs","fCirc","fTtl","foreColor","plotOptions","radialBar","startAngle","endAngle","track","dropShadow","top","left","blur","opacity","show","value","fontSize","shade","gradientToColors","stroke","lineCap","style","margin","width","Info","useParams","fetchLink","coinInfo","setcoinInfo","cPicOb","setCPicOb","ath","setath","atl","setatl","hourL","sethourL","hourH","sethourH","sethourChg","atlDate","setatlDate","athDate","setathDate","curPrice","setcurPrice","mCap","setmCap","coinDesc","setcoinDesc","pcgCh","setpcgCh","ttlSply","setttlSply","cirSply","setcirSply","vol","setvol","atlCh","setatlCh","athCh","setathCh","createElementFromHTML","htmlString","document","getElementById","innerHTML","trim","cInst","cMar","market_data","volData","total_volume","usd","low_24h","high_24h","hourChg","market_cap_change_24h_in_currency","shortString","str1","length","constructor","String","slice","atlD","atl_date","athD","ath_date","max_supply","circulating_supply","rawPrice","market_cap","coinD","description","en","ath_change_percentage","atl_change_percentage","small","App","state","axios","get","then","resp","setState","href","exact","path","component","withRouter","this","React","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ff4699d6.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n} from \"react-router-dom\";\n\n\n// THIS FUNCTION COMPONENT TAKES THE COIN INSTANCES AND POPULATES A JSX ELEMENT DEPENDING ON WHETHER ITS UP OR DOWN IN PRICE\nconst Coin = ({ coin }) => {      \n    const switchURL = () => {\n        window.location=`/${coin.id}`   //THIS SWITCHES THE PAGE TO THE COIN BASED ON COIN'S ID\n    }\n  if (coin.price_change_percentage_24h > 0) {   //OPTIONS FOR POSITIVE MOVING TOKENS ARE PLACED IN JSX HERE. FOR STYLING\n    return (\n      <Router>\n          <div className=\"coin-inst iup\" onClick={switchURL}>\n            <span className=\"rankNo\">{coin.market_cap_rank}</span>    \n            <img src={coin.image} className=\"pic\" />\n            <span className=\"name\">{coin.name}</span>\n            <span className=\"symbol\">{coin.symbol}</span>\n            <span className=\"curPrice\">\n              ${Math.ceil(coin.current_price * 100) / 100}\n            </span>\n            <span className=\"change up\">\n              {Math.round(\n                (coin.price_change_percentage_24h + Number.EPSILON) * 100\n              ) / 100}\n              %\n            </span>\n          </div>\n      </Router>\n    );\n  } else {                             //NEGATIVE MOVING COINS ARE PLACED IN JSX HERE. FOR STYLING\n    return (                         \n        <Router>\n          <div className=\"coin-inst idwn\" onClick={switchURL} >\n            <span className=\"rankNo\">{coin.market_cap_rank}</span>\n            <img src={coin.image} className=\"pic\" />\n            <span className=\"name\">{coin.name}</span>\n            <span className=\"symbol\">{coin.symbol}</span>\n            <span className=\"curPrice\">\n              ${Math.ceil(coin.current_price * 100) / 100}\n            </span>\n            <span className=\"change down\">\n              {Math.round(\n                (coin.price_change_percentage_24h + Number.EPSILON) * 100           //SETS PERCENTAGE TO READABLE FORMAT\n              ) / 100}\n              %\n            </span>\n          </div>\n      </Router>\n    );\n  }\n};\n\nexport default Coin;\n","import React from \"react\";\nimport Coin from \"./components/Coin\";\n\n// THIS FUNCTION COMPONENT MAPS THROUGH THE RETURNED LIST OF COINS AND CREATES AN LIST ELEMENT FOR EACH\nconst List = ({ data }) => {\n  return (\n    <div className=\"coinNest\">\n      {\" \"}\n      {data.map((coin) => {                                  \n        return <Coin coin={coin} key={coin.id} />;\n      })}{\" \"}\n    </div>\n  );\n};\nexport default List;\n","import React, { useEffect, useState } from 'react'\nimport ReactApexChart from 'react-apexcharts'\nimport { useParams } from 'react-router-dom';\nimport ApexCharts from 'apexcharts'\n\n\n\n\nfunction Chart(props) {\n  let coinID = props.coin\n  let name = props.name\n  const [dateArr, setdateArr] = useState([]);\n  const [priceArr, setpriceArr] = useState([]);\n  const [chartPrices, setchartPrices] = useState([]);\n\n\n  const getInfo = async () => {\n    const rawData = await fetch(`https://api.coingecko.com/api/v3/coins/${coinID}/market_chart?vs_currency=usd&days=365`);\n    const chartData = await rawData.json();\n    console.log(rawData)\n    console.log(chartData)\n\n    const chartPrices = chartData.prices\n    setchartPrices(chartPrices)\n    chartData.prices.map((instArr) => {\n      dateArr.push(new Date(instArr[0]));\n      setdateArr(dateArr)\n      priceArr.push(instArr[1].toFixed(2))\n      setpriceArr(priceArr)\n    });\n    console.log(coinID)\n  }\n  useEffect(() => {\n    getInfo()\n  }, []);\n\n  const series = [{\n    name: name,\n    data: chartPrices\n  }];\n\n  const options = {\n    chart: {\n      type: \"area\",\n      stacked: false,\n      height: 350,\n      background: '#000ffffff',\n      zoom: {\n        type: \"x\",\n        enabled: true,\n        autoScaleYaxis: true,\n      },\n      toolbar: {\n        autoSelected: \"zoom\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    markers: {\n      size: 0\n    },\n    title: {\n      text: `Price Movement (1 Year)`,\n      align: \"center\"\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.5,\n        opacityTo: 0,\n        stops: [0, 90, 100]\n      }\n    },\n    theme: {\n      mode: 'dark',\n      palette: 'palette9',\n      monochrome: {\n        enabled: true,\n        color: '#1689F8',\n        shadeTo: 'dark',\n        shadeIntensity: 0.95\n      }\n    },\n    yaxis: {\n      labels: {\n        formatter: function (val) {\n          return (val).toFixed(3);\n        },\n      },\n      title: {\n        text: \"Price\",\n      },\n      tickAmount: 10\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    tooltip: {\n      shared: false,\n      y: {\n        formatter: function (val) {\n          return val.toFixed(4);\n        },\n      },\n    },\n  }\n\n  return (\n    <div id=\"chart\">\n      <ReactApexChart\n        options={options}\n        series={series}\n        type=\"area\"\n        height=\"100%\"\n      />\n    </div>\n  );\n}\n\nexport default Chart;\n\n","import React, { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { useParams } from \"react-router-dom\";\nimport ApexCharts from \"apexcharts\";\n\nfunction Donut(props) {\n    let circ = props.cir_sup;\n    console.log(circ)\n    let ttl = props.ttl_sup;\n    console.log(ttl)\n    let rem;\n    if (ttl == null) {\n        ttl = circ;\n        rem = 100\n    } else {\n        rem = ((circ / ttl) * 100).toFixed();\n    };\n\n    function numFormat(labelValue) {\n        return Math.abs(Number(labelValue)) >= 1.0e9\n          ? (Math.abs(Number(labelValue)) / 1.0e9).toFixed(2) + \"B\"\n          : Math.abs(Number(labelValue)) >= 1.0e6\n          ? (Math.abs(Number(labelValue)) / 1.0e6).toFixed(2) + \"M\"\n          : Math.abs(Number(labelValue)) >= 1.0e3\n          ? (Math.abs(Number(labelValue)) / 1.0e3).toFixed(2) + \"K\"\n          : Math.abs(Number(labelValue));\n      }\n      const fCirc = numFormat(circ);\n      const fTtl = numFormat(ttl);\n\n    const options = {\n        chart: {\n            foreColor: '#ffffff',\n            height: 480,\n            type: \"radialBar\"\n        },\n        series: [rem\n        ],\n        // colors: [\"#4918FF\"],\n        plotOptions: {\n            radialBar: {\n                startAngle: -135,\n                endAngle: 135,\n                track: {\n                    dropShadow: {\n                        enabled: true,\n                        top: 2,\n                        left: 0,\n                        blur: 4,\n                        opacity: 0.15\n                    },\n                    background: '#333',\n                    startAngle: -135,\n                    endAngle: 135,\n                },\n                dataLabels: {\n                    name: {\n                        show: true,\n                    },\n                    value: {\n                        fontSize: \"24px\",\n                        show: true\n\n                    }\n                }\n            }\n        },\n        fill: {\n            type: \"gradient\",\n            gradient: {\n                shade: \"dark\",\n                type: \"horizontal\",\n                gradientToColors: [\"#574DD9\"],\n                stops: [0, 100]\n            }\n        },\n        stroke: {\n            lineCap: \"butt\"\n        },\n        labels: [\"Circulating Supply\"]\n    };\n\n\n    return (\n        <div>\n            <h3 style= {{margin: \"0\"}}>Token Metrics</h3>\n            <ReactApexChart\n                options={options}\n                series={options.series}\n                type=\"radialBar\"\n                width='100%'\n\n            />\n            <div className=\"legend\">\n                <p className=\"market-text 1\">\n                    Circulating Supply: <span className=\"rnum bld\">{fCirc}</span>\n                </p>\n                <p className=\"market-text 2\">\n                    Total Supply: <span className=\"rnum bld\">{fTtl}</span>\n                </p>\n            </div>\n        </div> \n    );\n};\n\nexport default Donut;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport { useParams } from \"react-router-dom\";\nimport Chart from \"./components/Chart\";\nimport Donut from './components/Donut'\nimport ReactDOM from 'react-dom'\n\nfunction Info() {\n  let { coinID } = useParams();          \n  useEffect(() => {\n    getInfo();\n  }, []);\n\n  \n  // THIS SETS VARIABLE FETCH LINK TO CHANGE BASED ON THE TOKEN SELECTED.\n  let fetchLink = `https://api.coingecko.com/api/v3/coins/${coinID}?localization=false&tickers=false`;\n\n  // SETTING POTENTIALLY NEEDED VARIABLES TO STATE FOR USE\n  const [coinInfo, setcoinInfo] = useState([]);\n  const [cPicOb, setCPicOb] = useState([]);\n  const [ath, setath] = useState([]);\n  const [atl, setatl] = useState([]);\n  const [hourL, sethourL] = useState([]);\n  const [hourH, sethourH] = useState([]);\n  const [hourChg, sethourChg] = useState([]);\n  const [atlDate, setatlDate] = useState([]);\n  const [athDate, setathDate] = useState([]);\n  const [curPrice, setcurPrice] = useState([]);\n  const [mCap, setmCap] = useState([]);\n  const [coinDesc, setcoinDesc] = useState([]);\n  const [pcgCh, setpcgCh] = useState([]);\n  const [ttlSply, setttlSply] = useState([]);\n  const [cirSply, setcirSply] = useState([]);\n  const [vol, setvol] = useState([]);\n  const [atlCh, setatlCh] = useState([]);\n  const [athCh, setathCh] = useState([]);\n\n  const getInfo = async () => {\n    const cInst = await fetch(fetchLink);       //FETCHES API HERE\n\n    const coinInfo = await cInst.json();\n    console.log(coinInfo);\n    setcoinInfo(coinInfo);\n\n    const cPicOb = coinInfo.image;\n    setCPicOb(cPicOb);\n\n    const cMar = coinInfo.market_data;\n    const volData = cMar.total_volume;\n\n    const atl = cMar.atl.usd.toFixed(3);   //'.toFixed(3)' SETS THE DECIMAL TO ALWAYS ROUND TO HUNDREDTH (.000)\n    setatl(atl);\n\n    const ath = cMar.ath.usd.toFixed(3);\n    setath(ath);\n\n    const hourL = cMar.low_24h.usd.toFixed(3);\n    sethourL(hourL);\n\n    const hourH = cMar.high_24h.usd.toFixed(3);\n    sethourH(hourH);\n\n    const hourChg = cMar.market_cap_change_24h_in_currency.usd;\n    sethourChg(hourChg);\n\n    const shortString = function (str1, length) {             //THIS FUNCTION WAS USED TO CREATE TO TAKE ONLY THE \n      if (str1.constructor === String && length > 0) {       // NEEDED PORTION OF THE RETURNED DATE\n        return str1.slice(0, length);\n      }\n    };\n    const atlD = cMar.atl_date.usd;\n\n    const atlDate = shortString(atlD, 10);\n    setatlDate(atlDate);\n\n    const athD = cMar.ath_date.usd;\n    const athDate = shortString(athD, 10);\n    setathDate(athDate);\n\n    const pcgCh = cMar.price_change_percentage_24h.toFixed(2);\n    setpcgCh(pcgCh);\n\n    const ttlSply = cMar.max_supply;\n    setttlSply(ttlSply);\n\n    const cirSply = cMar.circulating_supply;\n    setcirSply(cirSply);\n\n    const vol = numFormat(volData.usd);\n    setvol(vol);\n\n    const rawPrice = cMar.current_price.usd;\n    const curPrice = rawPrice.toFixed(3);\n    setcurPrice(curPrice);\n\n    // THE FOLLOWING FUNCTION FORMATS NUMBERS FROM (6743474990 -> 6.74B ) \n    function numFormat(labelValue) { \n      return Math.abs(Number(labelValue)) >= 1.0e9\n        ? (Math.abs(Number(labelValue)) / 1.0e9).toFixed(2) + \"B\"\n        : Math.abs(Number(labelValue)) >= 1.0e6\n        ? (Math.abs(Number(labelValue)) / 1.0e6).toFixed(2) + \"M\"\n        : Math.abs(Number(labelValue)) >= 1.0e3\n        ? (Math.abs(Number(labelValue)) / 1.0e3).toFixed(2) + \"K\"\n        : Math.abs(Number(labelValue));\n    }\n\n    const mCap = numFormat(cMar.market_cap.usd);\n    setmCap(mCap);\n\n    const coinD = coinInfo.description.en;\n    function createElementFromHTML(htmlString) {\n      let div = document.getElementById('infoBox');\n      div.innerHTML = htmlString.trim();\n    \n    }\n    const coinDesc = createElementFromHTML(coinD)\n    setcoinDesc(coinDesc);\n\n    const athCh = cMar.ath_change_percentage.usd.toFixed(2);\n    setathCh(athCh);\n\n    const atlCh = cMar.atl_change_percentage.usd.toFixed(2);\n    setatlCh(atlCh);\n\n    const cSym = coinInfo.symbol\n  };\n\n  \n  return (\n    <body>\n      <div className=\"info-box head-box\">\n        <div id=\"leftHead\">\n          <img className=\"head-img\" src={cPicOb.small} />\n          <h1 className=\"head-text\">{coinInfo.name}</h1>\n          <h5 id=\"symb\">{coinInfo.symbol}</h5>\n        </div>\n        <div id=\"rightHead\">\n          <p className=\"head-small\">\n            24h Low/High:\n            <span className=\"down\"> ${hourL}</span>/\n            <span className=\"up\">${hourH}</span>\n          </p>\n          <h2 className=\"price\">\n            ${curPrice} <span className=\"pcg\">{pcgCh}%</span>\n          </h2>\n          <p className=\"head-small\">\n            Market Cap:<span className=\"bld\"> ${mCap}</span>\n          </p>\n        </div>\n      </div>\n      <div id=\"section-mid\">\n        <div className=\" info-box chart-box\">\n          <Chart coin={coinID} name={coinInfo.name} />\n        </div>\n        <div id=\"floatbox\">\n          <div className=\"info-box market-box\">\n            <p className=\"market-text 1\">\n              Market Rank:\n              <span className=\"rnum bld\">{coinInfo.market_cap_rank}</span>\n            </p>\n            <p className=\"market-text 2\">\n              24 Hour Volume: <span className=\"rnum bld\">${vol}</span>\n            </p>\n            <p className=\"market-text 1\">\n              All-Time High:\n              <span className=\"rnum bld\">${ath}</span>\n            </p>\n            <p className=\"market-text 2\">\n              All-Time High Date:\n              <span className=\"rnum bld\">{athDate}</span>\n            </p>\n            <p className=\"market-text 1\">\n              All-Time High % Change: <span className=\"rnum bld\">{athCh}%</span>\n            </p>\n            <p className=\"market-text 2\">\n              All-Time Low: <span className=\"rnum bld\">${atl}</span>\n            </p>\n            <p className=\"market-text 1\">\n              All-Time Low Date:\n              <span className=\"rnum bld\">{atlDate}</span>\n            </p>\n            <p className=\"market-text 2\">\n              All-Time Low % Change: <span className=\"rnum bld\">{atlCh}%</span>\n            </p>\n          </div>\n          <div className=\" info-box donut-box\">\n            <Donut cir_sup={cirSply} ttl_sup={ttlSply}/>\n          </div>\n        </div>\n      </div>\n      <div id=\"infoBox\" className=\"info-box about-box\">\n        <h1>About {coinInfo.name}</h1>\n        <p className=\"about-text\">{coinDesc}</p>\n      </div>\n    </body>\n  );\n}\n\nexport default Info;\n","import React from \"react\";\nimport \"./App.css\";\nimport List from \"./List\";\nimport axios from \"axios\";\nimport Info from \"./Info\";\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  // AXIOS IS USED TO FETCH API IN CLASS COMPONENTS\n  componentWillMount() {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false&price_change_percentage=1h%2C24h%2C7dß\"\n      )\n      .then((resp) => {\n        this.setState({ data: resp.data });\n        console.log(this.state.data);\n      });\n  }\n  // SETS TITLE TO 'TokenWatch'\n  componentDidMount() {\n    document.title = 'TokenWatch';\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <nav className=\"nav-menu\">\n                <a style={{fontSize: \"12pt\"}} className=\"nav-text\" href=\"/\"> Home</a>\n              </nav>\n              <h1 style={{fontSize: \"36pt\"}}>TokenWatch</h1>\n              <p style={{fontSize: \"16pt\"}}>The Crypto Monitoring App built with React</p>\n            </header>\n            <Route exact path=\"/:coinID\" component={withRouter(Info)} />\n            <Route exact path=\"/\">\n               <List data={this.state.data} />   {/*This components houses the list of tokens */}\n            </Route>\n          </div>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\"\nimport Info from './Info';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}